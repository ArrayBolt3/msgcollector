#!/bin/bash

## Copyright (C) 2012 - 2020 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

msgdispatcher_pid_check() {
   local pid_file pid

   if [ "$who_ami" = "" ]; then
      who_ami="$(whoami)"
   fi

   if [ "cli" = "$1" ]; then
      pid_file="/run/msgcollector/$who_ami/msgdispatcher_pidcli"
   elif [ "x" = "$1" ]; then
      pid_file="/run/msgcollector/$who_ami/msgdispatcher_pidx"
   else
      error "$FUNCNAME neither cli nor x is set to 1."
   fi

   [[ -f "$pid_file" ]] || return 0

   return 1

   ## hidepid=2 broke this
   #pid="$(cat "$pid_file")" || return 5
   ## `kill` does not work if running under a different user account then set
   ## in variable `who_ami`, therefore using `ps`.
   #kill -0 "$pid" >/dev/null 2>&1 || return 6
   #ps -p "$pid" >/dev/null 2>&1 || return 6
}

msgdispatcher_run_check() {
   if msgdispatcher_pid_check "x" ; then
      msgdispatcher_running_x="true"
   fi
   if msgdispatcher_pid_check "cli" ; then
      msgdispatcher_running_cli="true"
   fi
}

msgdispatcher_init() {
   output_tool="/usr/lib/msgcollector/msgcollector"
   output_general="output_func_general"
   output_x="output_func_x"
   output_cli="output_func_cli"
   msgdispatcher_run_check
}

msgdispatcher_wait() {
   while true; do
      msgdispatcher_run_check
      if [ "$msgdispatcher_running_x" = "true" ] || [ "$msgdispatcher_running_cli" = "true" ]; then
         break
      fi
      sleep "2" &
      lastpid="$!"
      wait "$lastpid" || break
   done
}

output_func_general() {
   output_func "$@"
   return "$?"
}

output_func_x() {
   if [ "$msgdispatcher_running_x" = "true" ]; then
      output_func "$@"
      return "$?"
   fi
   true "Skipping $FUNCNAME."
}

output_func_cli() {
   if [ "$msgdispatcher_running_cli" = "true" ]; then
      output_func "$@"
      return "$?"
   fi
   true "$FUNCNAME: injecting --onlyecho."
   output_func --onlyecho "$@"
}

output_func() {
   [ -n "$who_ami" ] || who_ami="$(whoami)"

   if [ "$output_func_verbose" = "true" ]; then
      echo "Running: bash -x $output_tool --identifier $IDENTIFIER --whoami $who_ami ${1+$@}"
      bash -x $output_tool --identifier "$IDENTIFIER" --whoami "$who_ami" "$@"
   else
      $output_tool --identifier "$IDENTIFIER" --whoami "$who_ami" "$@"
   fi
   return "$?"
}
