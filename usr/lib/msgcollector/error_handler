#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

error_handler() {
   local exit_code="$?"
   BUG="1"

   if [ -d /usr/share/whonix ]; then
      local MSG="\
###############################################################################
## $SCRIPTNAME script bug.
## No panic. Nothing is broken. Just some rare condition has been hit.
## Try again later. There is likely a solution for this problem.
## Please see Whonix News, Whonix Blog and Whonix User Help Forum.
## Please report this bug!
##
## BASH_COMMAND: $BASH_COMMAND
## exit_code: $exit_code
##
## Experts only:
## bash -x $SCRIPTNAME --verbose
## for verbose output. Clean the output and report to Whonix developers.
###############################################################################\
"
   else
      local MSG="\
###############################################################################
## $SCRIPTNAME script bug.
## No panic. Nothing is broken. Just some rare condition has been hit.
## Try again later. There is likely a solution for this problem.
## Please report this bug!
##
## BASH_COMMAND: $BASH_COMMAND
## exit_code: $exit_code
##
## Experts only:
## bash -x $SCRIPTNAME --verbose
## for verbose output. Clean the output and report a bug.
###############################################################################\
"
   fi
   ## Check if $output command has been already defined. This is not the case,
   ## when the script is terminated very early.
   local command_v_output_exit_code
   command_v_output_exit_code="0"
   command -v "$output" >/dev/null || { command_v_output_exit_code="$?" ; true; };
   if [ "$command_v_output_exit_code" = "0" ]; then
      $output ${output_opts[@]} --messagex --typex "error" --titlex "$TITLE" --message "$MSG" --done
      $output ${output_opts[@]} --messagecli --typecli "error" --titlecli "$TITLE" --message "$MSG" --done
   else
      echo "$MSG"
   fi

   ## Check if ex_funct command has been already defined. This is not the case,
   ## when the script is terminated very early.
   local command_v_output_exit_code
   command_v_output_exit_code="0"
   command -v "ex_funct" >/dev/null || { command_v_output_exit_code="$?" ; true; };
   if [ "$command_v_output_exit_code" = "0" ]; then
      echo "$SCRIPTNAME: Error detected. Cleaning up... Exiting..."
      EXIT_TYPE="err"
      ex_funct
   else
      echo "$SCRIPTNAME: Error detected. Skipping ex_funct since not yet load. Exiting..."
   fi

   exit 1
}
